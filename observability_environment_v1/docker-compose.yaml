version: '3.8'
services:

    #----------------------------------------------------------------------------------------
    ## OPENTELEMETRY-FORWARD
    #----------------------------------------------------------------------------------------
    opentelemetry-collector-forward:
        env_file: .env
        image: otel/opentelemetry-collector-contrib:${OTEL_FORWARD_VERSION}
        container_name: opentelemetry-collector-forward
        privileged: true
        tty: true
        volumes:
            - ./opentelemetry/forward/conf/opentelemetry-config.yaml:/etc/opentelemetry-config.yaml
            - ./opentelemetry/forward/shared/:/home/opentelemetry/shared/
        command: ["--config=/etc/opentelemetry-config.yaml"]
        ports:
            - ${OTEL_FORWARD_PPROF_PORT}:1888
            - ${OTEL_FORWARD_PROMETHEUS_METRICS_PORT}:8888
            - ${OTEL_FORWARD_PROMETHEUS_EXPORTER_PORT}:8889
            - ${OTEL_FORWARD_HEALTH_CHECK_PORT}:13133
            - ${OTEL_FORWARD_OTLP_GRPC_PORT}:4317
            - ${OTEL_FORWARD_OTLP_HTTP_PORT}:4318
            - ${OTEL_FORWARD_ZPAGES_PORT}:55679
        depends_on:
            - opentelemetry-collector-elasticsearch
            - opentelemetry-collector-opensearch
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## OPENTELEMETRY-COLLECTOR-ELASTICSEARCH
    #----------------------------------------------------------------------------------------
    opentelemetry-collector-elasticsearch:
        env_file: .env
        image: otel/opentelemetry-collector-contrib:${OTEL_ELASTICSEARCH_VERSION}
        container_name: opentelemetry-collector-elasticsearch
        privileged: true
        tty: true
        volumes:
            - ./opentelemetry/elasticsearch/conf/opentelemetry-config.yaml:/etc/opentelemetry-config.yaml
            - ./opentelemetry/elasticsearch/shared/:/home/opentelemetry/shared/
        command: [ "--config=/etc/opentelemetry-config.yaml" ]
        ports:
            - ${OTEL_ELASTICSEARCH_PPROF_PORT}:1888
            - ${OTEL_ELASTICSEARCH_PROMETHEUS_METRICS_PORT}:8888
            - ${OTEL_ELASTICSEARCH_PROMETHEUS_EXPORTER_PORT}:8889
            - ${OTEL_ELASTICSEARCH_HEALTH_CHECK_PORT}:13133
            - ${OTEL_ELASTICSEARCH_OTLP_GRPC_PORT}:4317
            - ${OTEL_ELASTICSEARCH_OTLP_HTTP_PORT}:4318
            - ${OTEL_ELASTICSEARCH_ZPAGES_PORT}:55679
        depends_on:
            - elasticsearch
            - logstash
            - kibana
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## OPENTELEMETRY-COLLECTOR-OPENSEARCH
    #----------------------------------------------------------------------------------------
    opentelemetry-collector-opensearch:
        env_file: .env
        image: otel/opentelemetry-collector-contrib:${OTEL_OPENSEARCH_VERSION}
        container_name: opentelemetry-collector-opensearch
        privileged: true
        tty: true
        volumes:
            - ./opentelemetry/opensearch/conf/opentelemetry-config.yaml:/etc/opentelemetry-config.yaml
            - ./opentelemetry/opensearch/shared/:/home/opentelemetry/shared/
            - ./opensearch/certs/:/etc/ssl/certs/
        command: [ "--config=/etc/opentelemetry-config.yaml" ]
        ports:
            - ${OTEL_OPENSEARCH_PPROF_PORT}:1888
            - ${OTEL_OPENSEARCH_PROMETHEUS_METRICS_PORT}:8888
            - ${OTEL_OPENSEARCH_PROMETHEUS_EXPORTER_PORT}:8889
            - ${OTEL_OPENSEARCH_HEALTH_CHECK_PORT}:13133
            - ${OTEL_OPENSEARCH_OTLP_GRPC_PORT}:4317
            - ${OTEL_OPENSEARCH_OTLP_HTTP_PORT}:4318
            - ${OTEL_OPENSEARCH_ZPAGES_PORT}:55679
        depends_on:
            - tempo
            - loki
            - jaeger
            - prometheus
            - grafana
            - zipkin
            - node-0.example.com
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## JAEGER-v1 (deprecated)
    #----------------------------------------------------------------------------------------
    jaeger:
        env_file: .env
        image: jaegertracing/all-in-one:${JAEGER_VERSION}
        container_name: jaeger
        privileged: true
        tty: true
        volumes:
            - ./jaeger/shared/:/home/jaeger/shared/
        environment:
            COLLECTOR_OTLP_ENABLED: "true"
        ports:
            - ${JAEGER_PORT_GRPC}:14250
            - ${JAEGER_PORT_HTTP}:16686
            - ${JAEGER_PORT_OTLP}:16685
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## PROMETHEUS
    #----------------------------------------------------------------------------------------
    prometheus:
        env_file: .env
        image: prom/prometheus:${PROMETHEUS_VERSION}
        container_name: prometheus
        privileged: true
        tty: true
        command: [--config.file=/etc/prometheus/prometheus.yaml]
        volumes:
            - ./prometheus/conf/prometheus.yaml:/etc/prometheus/prometheus.yaml
            - ./prometheus/shared/:/home/prometheus/shared/
        ports:
            - ${PROMETHEUS_PORT}:9090
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## GRAFANA
    #----------------------------------------------------------------------------------------
    grafana:
        env_file: .env
        image: grafana/grafana:${GRAFANA_VERSION}
        container_name: grafana
        privileged: true
        tty: true
        volumes:
            - ./grafana/conf/grafana.yaml:/etc/grafana/provisioning/datasources/default.yaml
            - ./grafana/shared/:/home/grafana/shared/
        environment:
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        ports:
            - ${GRAFANA_PORT}:3000
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## LOKI
    #----------------------------------------------------------------------------------------
    loki:
        env_file: .env
        image: grafana/loki:${LOKI_VERSION}
        container_name: loki
        privileged: true
        tty: true
        volumes:
            - ./loki/conf/loki.yaml:/etc/loki/local-config.yaml
            - ./loki/shared/:/home/loki/shared/
        command: -config.file=/etc/loki/local-config.yaml
        ports:
            - ${LOKI_PORT}
            - ${LOKI_PORT_HOST}:${LOKI_PORT}
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## TEMPO
    #----------------------------------------------------------------------------------------
    tempo:
        env_file: .env
        image: grafana/tempo:${TEMPO_VERSION}
        container_name: tempo
        privileged: true
        tty: true
        volumes:
            - ./tempo/conf/tempo.yaml:/etc/tempo.yaml
            - ./tempo/shared/:/home/tempo/shared/
        command: [ "-config.file=/etc/tempo.yaml" ]
        ports:
            - ${TEMPO_OTLP_PORT}
            - ${TEMPO_HTTP_PORT}
            - ${TEMPO_OTLP_PORT_HOST}:${TEMPO_OTLP_PORT}
            - ${TEMPO_HTTP_PORT_HOST}:${TEMPO_HTTP_PORT}
            - ${TEMPO_HTTP_LISTEN_PORT_HOST}:${TEMPO_HTTP_LISTEN_PORT}
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## OPENSEARCH
    #----------------------------------------------------------------------------------------
    node-0.example.com:
        env_file: .env
        image: opensearchproject/opensearch:${OPENSEARCH_VERSION}
        container_name: node-0.example.com
        privileged: true
        tty: true
        volumes:
            - opensearch-vol1:/usr/share/opensearch/data #see in volumes below
            - ./opensearch/conf:/usr/share/opensearch/config/opensearch-performance-analyzer
            - ./opensearch/shared/:/home/opensearch/shared/
            #- ./opensearch/conf/opensearch.yml:/usr/share/opensearch/config/opensearch.yml
        environment:
            - cluster.name=opensearch-cluster
            - node.name=node-0.example.com
            - discovery.seed_hosts=node-0.example.com
            - cluster.initial_cluster_manager_nodes=node-0.example.com
            - bootstrap.memory_lock=true
            - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
            - OPENSEARCH_INITIAL_ADMIN_PASSWORD=${OPENSEARCH_INITIAL_ADMIN_PASSWORD}
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        ports:
            - ${OPENSEARCH_PORT_REST_API}:9200
            - ${OPENSEARCH_PORT_REST_ANALYZER}:9600
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## OPENSEARCH-DASHBOARDS
    #----------------------------------------------------------------------------------------
    opensearch-dashboards:
        env_file: .env
        image: opensearchproject/opensearch-dashboards:${OPENSEARCH_VERSION}
        container_name: opensearch-dashboards
        privileged: true
        tty: true
        volumes:
            - ./opensearch/shared/:/home/opensearch/shared/
        environment:
            OPENSEARCH_HOSTS: '["https://node-0.example.com:9200"]'
        ports:
            - ${OPENSEARCH_PORT_WEB}:5601
        expose:
            - ${OPENSEARCH_PORT_WEB}
        depends_on:
            - node-0.example.com
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## OPENSEARCH-DATA-PREPPER
    #----------------------------------------------------------------------------------------
    data-prepper:
        env_file: .env
        image: opensearchproject/data-prepper:${DATA_PREPPER_VERSION}
        container_name: data-prepper
        privileged: true
        tty: true
        volumes:
            - ./data-prepper/pipelines.yaml:/usr/share/data-prepper/pipelines/pipelines.yaml:ro
            - ./data-prepper/data-prepper-log4j2.properties:/usr/share/data-prepper/config/log4j2.properties:ro
            - ./opensearch/certs/:/usr/share/certs/opensearch/
        environment:
            OPENSEARCH_HOSTS: '["https://node-0.example.com:9200"]'
        ports:
            - "21890:21890"
            - "21891:21891"
        depends_on:
            - node-0.example.com
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## ELASTICSEARCH
    #----------------------------------------------------------------------------------------
    elasticsearch:
        env_file: .env
        image: elasticsearch:${GENERAL_STACK_VERSION}
        container_name: elasticsearch
        privileged: true
        tty: true
        volumes:
            - elasticsearch-vol1:/usr/share/elasticsearch/data #see in volumes below
            - ./elasticsearch/shared/:/home/elasticsearch/shared/
            - ./elasticsearch/conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
        environment:
            ELASTIC_VERSION: ${GENERAL_STACK_VERSION}
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
            KIBANA_USERNAME: ${KIBANA_SYSTEM_USERNAME}
            KIBANA_SYSTEM_USERNAME: ${KIBANA_SYSTEM_USERNAME}
            LOGSTASH_INTERNAL_USERNAME: ${LOGSTASH_INTERNAL_USERNAME}
            LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
            ES_JAVA_OPTS: ${ELASTICSEARCH_JAVA_OPTS}
        ports:
            - ${ELASTICSEARCH_PORT_1}:9200
            - ${ELASTICSEARCH_PORT_2}:9300
        ulimits:
            memlock:
                soft: -1
                hard: -1
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## LOGSTASH
    #----------------------------------------------------------------------------------------
    logstash:
        env_file: .env
        image: logstash:${GENERAL_STACK_VERSION}
        container_name: logstash
        privileged: true
        tty: true
        volumes:
            - ./logstash/shared/:/home/logstash/shared/
            - ./logstash/pipeline:/usr/share/logstash/pipeline
            - ./logstash/conf/logstash.yml:/usr/share/logstash/config/logstash.yml
            - ./logstash/script/logstash-reload.sh:/home/logstash/logstash-reload.sh
            - ./opensearch/certs/:/usr/share/logstash/config/certs/
        environment:
            ELASTIC_VERSION: ${GENERAL_STACK_VERSION}
            LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD}
            LS_JAVA_OPTS: ${LOGSTASH_JAVA_OPTS}
        ports:
            - ${LOGSTASH_PORT_HTTP}:8080
            - ${LOGSTASH_PORT_BEAT}:5044
            - ${LOGSTASH_PORT_API}:9600
            - ${LOGSTASH_TCP_PORT}:5000/tcp
            - ${LOGSTASH_UDP_PORT}:5000/udp
        depends_on:
            - elasticsearch
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## KIBANA
    #----------------------------------------------------------------------------------------
    kibana:
        env_file: .env
        image: kibana:${GENERAL_STACK_VERSION}
        container_name: kibana
        privileged: true
        tty: true
        volumes:
            - ./kibana/shared/:/home/kibana/shared/
            - ./kibana/conf/kibana.yml:/usr/share/kibana/config/kibana.yml
        environment:
            ELASTIC_VERSION: ${GENERAL_STACK_VERSION}
            ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_HTTP_HOSTS}
            ELASTICSEARCH_USERNAME: ${ELASTIC_USERNAME}
            KIBANA_PASSWORD: ${KIBANA_PASSWORD}
            KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD}
        ports:
            - ${KIBANA_PORT_HOST}:5601
        depends_on:
            - elasticsearch
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## ZIPKIN
    #----------------------------------------------------------------------------------------
    zipkin:
        env_file: .env
        image: openzipkin/zipkin:${ZIPKIN_VERSION}
        container_name: zipkin
        privileged: true
        tty: true
        volumes:
            - ./zipkin/shared/:/home/zipkin/shared/
            - ./zipkin/conf/basic-auth.properties:/home/zipkin/properties/basic-auth.properties
        environment:
            STORAGE_TYPE: ${ZIPKIN_STORAGE_TYPE}
            SEARCH_ENABLED: ${ZIPKIN_SEARCH_ENABLED}
            #ES_HTTP_LOGGING: ${ZIPKIN_HTTP_LOGGING}
            ES_USERNAME: ${ELASTIC_USERNAME}
            ES_PASSWORD: ${ELASTIC_PASSWORD}
            ES_HOSTS: ${ELASTICSEARCH_HTTP_HOSTS}
            ES_SSL_NO_VERIFY: ${SECURITY_ZIPKIN_NO_SSL_CHECK}
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9411/health" ]
            interval: 30s
            timeout: 10s
            retries: 3
        ports:
            - ${ZIPKIN_PORT}:9411
        depends_on:
            - elasticsearch
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------
    ## WEB BROWSER - JUST FOR TESTS AND POCs
    #----------------------------------------------------------------------------------------
    browser:
        image: jlesage/firefox:${BROWSER_VERSION}
        container_name: firefox-browser
        privileged: true
        tty: true
        environment:
            - DISPLAY_WIDTH=1920
            - DISPLAY_HEIGHT=1080
            - KEEP_APP_RUNNING=1
        ports:
            - ${BROWSER_PORT}:5800
        volumes:
            - browser_data-vol1:/config
        networks:
            - default
            - observability_network_v1
    #----------------------------------------------------------------------------------------

volumes:
    opensearch-vol1:
    elasticsearch-vol1:
    browser_data-vol1:

networks:
    observability_network_v1:
