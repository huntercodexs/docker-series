#!/bin/bash
set -Eeo pipefail

# shellcheck disable=2154
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

# Debugging
echo " [DEBUG] HOST PORT  >>> ${PROFTPD_HOST_PORT}"
echo " [DEBUG] PROFTPD PORT  >>> ${PROFTPD_PORT}"
echo " [DEBUG] GROUP >>> ${PROFTPD_GROUP}"
echo " [DEBUG] USER  >>> ${PROFTPD_USER}"
echo " [DEBUG] PASS  >>> ${PROFTPD_PASS}"
echo " [DEBUG] UID   >>> ${PROFTPD_UID}"
echo " [DEBUG] PATH  >>> ${PROFTPD_PATH}"
echo " [DEBUG] SHELL >>> ${PROFTPD_SHELL}"

# Create user

{
    groupadd ${PROFTPD_GROUP} -g ${PROFTPD_UID} && echo "Group created successfully"
} || {
    echo "Group already exists: ${PROFTPD_GROUP}"
}

{
    useradd ${PROFTPD_USER} -g ${PROFTPD_GROUP} -d /home/${PROFTPD_USER} -s ${PROFTPD_SHELL} && echo "User created successfully"
} || {
    echo "User already exists: ${PROFTPD_USER}"
}

mkdir -p "/home/${PROFTPD_USER}/.ssh"
chown ${PROFTPD_USER}:${PROFTPD_GROUP} "/home/${PROFTPD_USER}"
chmod 777 "/home/${PROFTPD_USER}" -R
echo "${PROFTPD_USER}:${PROFTPD_PASS}" | chpasswd

# Add SSH keys to authorized_keys with valid permissions
ssh-keygen -q -t rsa -N '' -f "/home/${PROFTPD_USER}/.ssh/authorized_keys" <<< y > /dev/null 2>&1
userKeysQueuedDir="/home/${PROFTPD_USER}/.ssh/keys"

if [ -d "$userKeysQueuedDir" ]; then
    userKeysAllowedFileTmp="$(mktemp)"
    userKeysAllowedFile="/home/${PROFTPD_USER}/.ssh/authorized_keys"

    for publickey in "$userKeysQueuedDir"/*; do
        cat "$publickey" >> "$userKeysAllowedFileTmp"
    done

    # Remove duplicate keys
    sort < "$userKeysAllowedFileTmp" | uniq > "$userKeysAllowedFile"

    chown "${PROFTPD_UID}" "$userKeysAllowedFile"
    chmod 600 "$userKeysAllowedFile"
fi

# Staring service
echo "PROFTPD STARTING..."
/etc/init.d/proftpd start
echo "PROFTPD IS UP"

# Do not remove this command, it prevent container finished (exited with code 0)
/bin/bash
