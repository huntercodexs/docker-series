version: "3.7"
services:
  #----------------------------------------------------------------------------------------
  # WARNING: This is a Development Mode
  #----------------------------------------------------------------------------------------
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.1.2
    #build: ./elasticsearch/dockerfile/
    environment:
      ELASTIC_VERSION: 8.1.2
      ES_JAVA_OPTS: -Xmx512m -Xms512m
      ELASTIC_PASSWORD: 123mudar
      discovery.type: single-node
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elk_gateway
  #----------------------------------------------------------------------------------------
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.1.2
    #build: ./kibana/dockerfile/
    environment:
      ELASTIC_VERSION: 8.1.2
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      KIBANA_PASSWORD: 123mudar
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    networks:
      - elk_gateway
    depends_on:
      - elasticsearch
  #----------------------------------------------------------------------------------------
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:8.1.2
    #build: ./logstash/dockerfile/
    environment:
      ELASTIC_VERSION: 8.1.2
      LS_JAVA_OPTS: -Xmx512m -Xms512m
      LOGSTASH_INTERNAL_PASSWORD: 123mudar
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    networks:
      - elk_gateway
    depends_on:
      - elasticsearch
  #----------------------------------------------------------------------------------------
  grafana:
    image: grafana/grafana
    container_name: grafana
    #build: ./grafana/dockerfile/
    ports:
      - "3001:3000"
    #volumes:
    #  - "./grafana/:/etc/grafana/"
    #  - "./grafana/plugins/:/var/lib/grafana/plugins"
    #    links:
    #      - mysql-80
    tty: true
  #----------------------------------------------------------------------------------------
  grafana-ubuntu:
    image: grafana/grafana-enterprise:8.4.6-ubuntu
    container_name: grafana-ubuntu
    #build: ./grafana-ubuntu/dockerfile/
    ports:
      - "3000:3000"
    #volumes:
    #  - "./grafana-ubuntu/:/etc/grafana/"
    #  - "./grafana-ubuntu/plugins/:/var/lib/grafana/plugins"
    #    links:
    #      - mysql-80
    tty: true
  #----------------------------------------------------------------------------------------
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    #build: ./prometheus/dockerfile/
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus/:/etc/prometheus/"
#    links:
#      - mysql-80
    tty: true
  #----------------------------------------------------------------------------------------
  openjdk-8u212:
    image: openjdk:8u212
    container_name: openjdk-8u212
    #build: ./openjdk-8u212/dockerfile/
    ports:
      - "31899:8080"
    #volumes:
    #  - "./openjdk-8u212/:/etc/openjdk-8u212/"
    #    links:
    #      - mysql-80
    tty: true
  #----------------------------------------------------------------------------------------
  ubuntu-2004:
    image: ubuntu:20.04
    container_name: ubuntu-2004
#    build: ./ubuntu-2004/dockerfile/
    ports:
      - "8581:80"
    volumes:
      - "./ubuntu-2004/:/home/ubuntu/"
    links:
      - mysql-80
    tty: true
  #----------------------------------------------------------------------------------------
  ubuntu-1804:
    image: ubuntu:18.04
    container_name: ubuntu-1804
#    build: ./ubuntu-1804/dockerfile/
    ports:
      - "8580:80"
      - "3806:3306"
    volumes:
      - "./ubuntu-1804/:/home/ubuntu/"
    links:
      - mysql-57
    tty: true
  #----------------------------------------------------------------------------------------
  mysql-80:
    image: mysql:8.0
    container_name: mysql-80
    ports:
      - "3706:3306"
    volumes:
      - "./mysql-80:/var/lib/mysql/"
    environment:
      MYSQL_DATABASE: 'database'
      #      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'root123'
      MYSQL_ROOT_PASSWORD: 'root123'
  #----------------------------------------------------------------------------------------
  mysql-57:
    image: mysql:5.7
    container_name: mysql-5-7
    ports:
      - "3606:3306"
    volumes:
      - "./mysql-57:/var/lib/mysql/"
    environment:
      MYSQL_DATABASE: 'database'
#      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'root123'
      MYSQL_ROOT_PASSWORD: 'root123'
#----------------------------------------------------------------------------------------
networks:
  elk_gateway:
    driver: bridge
  dev_gateway:
    external: true
#----------------------------------------------------------------------------------------
volumes:
  elasticsearch: