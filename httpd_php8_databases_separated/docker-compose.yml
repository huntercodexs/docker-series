version: "3.7"
services:
    
    #----------------------------------------------------------------------------------------
    webserver:
        env_file: .env
        image: httpd:2.4.54
        container_name: webserver
        ports:
            - ${WEBSERVER740_PORT1}:80
            - ${WEBSERVER800_PORT1}:81
            - ${WEBSERVER810_PORT1}:82
            - ${WEBSERVER822_PORT1}:83
            - ${WEBSERVER8213_PORT1}:84
        privileged: true
        volumes:
            - ./applications/:/var/www/webserver/
            - ./webserver/conf/:/home/webserver/conf/
            - ./webserver/shared/:/home/webserver/shared/
        tty: true
        depends_on:
            - php-7.4.0
            - php-8.0.0
            - php-8.1.0
            - php-8.2.2
            - php-8.2.13
        links:
            - php-7.4.0
            - php-8.0.0
            - php-8.1.0
            - php-8.2.2
            - php-8.2.13
        networks:
            - httpd_php8_databases_separated_network
        #command: "/home/webserver/conf/webserver.sh"
    #----------------------------------------------------------------------------------------
    php-7.4.0:
        env_file: .env
        container_name: php-7.4.0
        build:
            context: ./php/7.4.0
            dockerfile: php-7.4.0.dockerfile
        ports:
            - ${PHP740_PORT}:9000
        volumes:
            - ./applications/:/var/www/webserver/
            - ./php/7.4.0/conf/:/home/php/conf/
            - ./php/7.4.0/shared/:/home/php/shared/
        networks:
            - httpd_php8_databases_separated_network
        #command: "/home/php/conf/custom.sh"
    #----------------------------------------------------------------------------------------
    php-8.0.0:
        env_file: .env
        container_name: php-8.0.0
        build:
            context: ./php/8.0.0
            dockerfile: php-8.0.0.dockerfile
        ports:
            - ${PHP800_PORT}:9000
        volumes:
            - ./applications/:/var/www/webserver/
            - ./php/8.0.0/conf/:/home/php/conf/
            - ./php/8.0.0/shared/:/home/php/shared/
        networks:
            - httpd_php8_databases_separated_network
        #command: "/home/php/conf/custom.sh"
    #----------------------------------------------------------------------------------------
    php-8.1.0:
        env_file: .env
        container_name: php-8.1.0
        build:
            context: ./php/8.1.0
            dockerfile: php-8.1.0.dockerfile
        ports:
            - ${PHP810_PORT}:9000
        volumes:
            - ./applications/:/var/www/webserver/
            - ./php/8.1.0/conf/:/home/php/conf/
            - ./php/8.1.0/shared/:/home/php/shared/
        networks:
            - httpd_php8_databases_separated_network
        #command: "/home/php/conf/custom.sh"
    #----------------------------------------------------------------------------------------
    php-8.2.2:
        env_file: .env
        container_name: php-8.2.2
        build:
            context: ./php/8.2.2
            dockerfile: php-8.2.2.dockerfile
        ports:
            - ${PHP822_PORT}:9000
        volumes:
            - ./applications/:/var/www/webserver/
            - ./php/8.2.2/conf/:/home/php/conf/
            - ./php/8.2.2/shared/:/home/php/shared/
        networks:
            - httpd_php8_databases_separated_network
        #command: "/home/php/conf/custom.sh"
    #----------------------------------------------------------------------------------------
    php-8.2.13:
        env_file: .env
        container_name: php-8.2.13
        build:
            context: ./php/8.2.13
            dockerfile: php-8.2.13.dockerfile
        ports:
            - ${PHP8213_PORT}:9000
        volumes:
            - ./applications/:/var/www/webserver/
            - ./php/8.2.13/conf/:/home/php/conf/
            - ./php/8.2.13/shared/:/home/php/shared/
        networks:
            - httpd_php8_databases_separated_network
        #command: "/home/php/conf/custom.sh"
    #----------------------------------------------------------------------------------------
    oraclelinux:
        env_file: .env
        container_name: oraclelinux
        build:
            context: ./databases/oracle/database
            dockerfile: oraclelinux.dockerfile
            args:
                DB_EDITION: ${DB_EDITION}
                ORACLE_PASSWORD: ${ORACLE_PASSWORD}
        volumes:
            - ./databases/oracle/share:/home/oracle/share
            - ./databases/oracle/oradata:/opt/oracle/oradata
        ports:
            - ${ORACLE_PORT1}:1521
            - ${ORACLE_PORT2}:5500
        tty: true
        networks:
            - default
            - httpd_php8_databases_separated_network
    #----------------------------------------------------------------------------------------
    mongo:
        env_file: .env
        container_name: mongo
        image: mongo
        ports:
            - ${MONGO_PORT}:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        volumes:
            - type: bind
              source: ./databases/mongo/MongoDB
              target: /data/db/
              read_only: false
            - type: bind
              source: ./databases/mongo/mongodb.conf
              target: /etc/mongodb.conf
              read_only: false
        tty: true
        networks:
            - default
            - httpd_php8_databases_separated_network
    #----------------------------------------------------------------------------------------
    mongo-express:
        env_file: .env
        container_name: mongo-express
        image: mongo-express
        ports:
            - ${MONGO_EXPRESS_PORT}:8081
        environment:
            ME_CONFIG_MONGODB_SERVER: ${MONGO_EXPRESS_SERVER_DRIVER}
            ME_CONFIG_MONGODB_PORT: ${MONGO_EXPRESS_SERVER_PORT}
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_EXPRESS_SERVER_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_EXPRESS_SERVER_PASSWORD}
            ME_CONFIG_MONGODB_URL: ${MONGO_EXPRESS_SERVER_URL}
            ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME}
            ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD}
        tty: true
        links:
            - mongo
        depends_on:
            - mongo
        networks:
            - default
            - httpd_php8_databases_separated_network
    #-----------------------------------------------------------------------------------------
    postgres:
        env_file: .env
        container_name: postgres
        image: postgres
        ports:
            - ${POSTGRES_PORT}:5432
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            TZ: GMT
        volumes:
            - type: bind
              source: ./databases/postgres/PostgresSQL
              target: /var/lib/postgresql/data/
              read_only: false
        tty: true
        networks:
            - default
            - httpd_php8_databases_separated_network
    #----------------------------------------------------------------------------------------
    mssql:
        env_file: .env
        container_name: mssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
            - ${MSSQL_PORT}:1433
        volumes:
            - type: bind
              source: ./databases/mssql
              target: /var/lib/mssql/data/
              read_only: false
            - type: bind
              source: ./databases/mssql/data
              target: /var/opt/mssql/data/
              read_only: false
        environment:
            SA_PASSWORD: ${MSSQL_SA_PASSWORD}
            MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
            ACCEPT_EULA: ${MSSQL_ACCEPT_EULA}
            MSSQL_PID: ${MSSQL_EDITION}
            TRUSTED_CONNECTION: ${MSSQL_TRUSTED_CONNECTION}
        tty: true
        networks:
            - default
            - httpd_php8_databases_separated_network
    #----------------------------------------------------------------------------------------
    mssql-tools:
        env_file: .env
        container_name: mssql-tools
        image:  mcr.microsoft.com/mssql-tools
        ports:
            - ${MSSQL_TOOLS_PORT}:10000
        tty: true
        networks:
            - default
            - httpd_php8_databases_separated_network
    #----------------------------------------------------------------------------------------
    mysql-80:
        env_file: .env
        image: mysql:8.0
        container_name: mysql80
        ports:
            - ${MYSQL80_PORT}:3306
        volumes:
            - ./databases/mysql-80/lib:/var/lib/mysql/
        environment:
            MYSQL_DATABASE: ${MYSQL80_DATABASE}
            MYSQL_USERNAME: ${MYSQL80_USERNAME}
            MYSQL_PASSWORD: ${MYSQL80_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL80_ROOT_PASSWORD}
        networks:
            - default
            - httpd_php8_databases_separated_network
    #----------------------------------------------------------------------------------------
    mysql-57:
        env_file: .env
        image: mysql:5.7
        container_name: mysql57
        ports:
            - ${MYSQL57_PORT}:3306
        volumes:
            - ./databases/mysql-57/lib:/var/lib/mysql/
        environment:
            MYSQL_DATABASE: ${MYSQL57_DATABASE}
            MYSQL_USERNAME: ${MYSQL57_USERNAME}
            MYSQL_PASSWORD: ${MYSQL57_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MYSQL57_ROOT_PASSWORD}
        networks:
            - default
            - httpd_php8_databases_separated_network
    #----------------------------------------------------------------------------------------
    # NOTE: The sqlite don't can used remotely, so it is used inside php8 container
    sqlite3:
        env_file: .env
        container_name: sqlite3
        build:
            context: ./databases/sqlite3
        privileged: true
        ports:
            - ${SQLITE3_PORT}:5050
        volumes:
            - type: bind
              source: ./databases/sqlite3/sqliteDB/sqlite-autoconf
              target: /data/sqlite3/
              read_only: false
            - type: bind
              source: ./databases/sqlite3/sqliteDB/databases
              target: /root/db/
              read_only: false
        stdin_open: true
        tty: true
        networks:
            - default
            - httpd_php8_databases_separated_network
    #----------------------------------------------------------------------------------------
    redis:
        env_file: .env
        container_name: redis
        build:
            context: ./databases/redis
        ports:
            - ${REDIS_PORT}:6379
        volumes:
            - type: bind
              source: ./databases/redis/data
              target: /data/
              read_only: false
            - type: bind
              source: ./databases/redis/redis.conf
              target: /etc/redis/redis.conf
              read_only: false
        command: redis-server --requirepass ${REDIS_AUTH}
        tty: true
        networks:
            - default
            - httpd_php8_databases_separated_network
    #-----------------------------------------------------------------------------------------
    firebird:
        env_file: .env
        container_name: firebird
        privileged: true
        build:
            context: ./databases/firebird
            dockerfile: firebird.dockerfile
            args:
                TZ: ${FIREBIRD_TIMEZONE}
                ISC_PASSWORD: ${FIREBIRD_ISC_PASSWORD}
                FIREBIRD_USER: ${FIREBIRD_USER}
                FIREBIRD_DBNAME: ${FIREBIRD_DBNAME}
        ports:
            - ${FIREBIRD_PORT}:3050
        volumes:
            - ./databases/firebird/data/:/etc/firebird/3.0/
        environment:
            TZ: ${FIREBIRD_TIMEZONE}
            FIREBIRD_DATABASE: ${FIREBIRD_DBNAME}
            FIREBIRD_USER: ${FIREBIRD_USER}
            FIREBIRD_PASS: ${FIREBIRD_ISC_PASSWORD}
            ISC_PASSWORD: ${FIREBIRD_ISC_PASSWORD}
        tty: true
        networks:
            - default
            - httpd_php8_databases_separated_network
    #----------------------------------------------------------------------------------------

networks:
    httpd_php8_databases_separated_network:
        external: true
